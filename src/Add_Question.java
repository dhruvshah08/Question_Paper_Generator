import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author dhruv
 * This class represents the Add_Question form
 * This class is used to add/update the main as well as subquestion
 */
public class Add_Question extends javax.swing.JFrame {
    PreparedStatement ps;
    ResultSet rs;
    Connection conn;
    Sub_Question sub_Question;
    Main_Question main_Question;
    boolean isMainQuestion,isUpdate;
    /**
     * Creates new form Add_Question
     */
    public Add_Question(boolean isMainQuestion,boolean isUpdate,Sub_Question sub_Question,Main_Question main_Question) {
        initComponents();
        conn=MySQLConnect.getConnection();
        this.isMainQuestion=isMainQuestion;
        this.isUpdate=isUpdate;
        this.main_Question=main_Question;
        this.sub_Question=sub_Question;
        if(!isMainQuestion){
            lblNoOfSubQts.setVisible(false);
            txtNoOfSubQuestions.setVisible(false);
            lblQuestionNumber.setVisible(false);
            txtQuestionNumber.setVisible(false);
            if(isUpdate){
                txtQuestionNumber.setEditable(false);
                txtQtStatement.setText(sub_Question.getStatement());
                txtQtWeightage.setText(sub_Question.getWeightage()+"");
                cmbQtDifficultyLevel.setSelectedItem(sub_Question.getDifficulty());
            }
        }else{
            lblWt.setText("Weightage/Question");
            cmbQtDifficultyLevel.setVisible(false);
            lblDiffLvl.setVisible(false);
            if(isUpdate){
                txtQuestionNumber.setEditable(false);
                txtQtStatement.setText(main_Question.getStatement());
                txtQtWeightage.setText(main_Question.getWeightagePerQuestion()+"");
                txtNoOfSubQuestions.setText(main_Question.getNoOfQuestions()+"");
                txtQuestionNumber.setText(main_Question.getAllotedQuestionNumber()+"");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtQtWeightage = new javax.swing.JTextField();
        lblQuestionNumber = new javax.swing.JLabel();
        txtQuestionNumber = new javax.swing.JTextField();
        txtNoOfSubQuestions = new javax.swing.JTextField();
        lblNoOfSubQts = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQtStatement = new javax.swing.JTextArea();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        cmbQtDifficultyLevel = new javax.swing.JComboBox<>();
        lblDiffLvl = new javax.swing.JLabel();
        lblWt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(245, 234, 186));

        txtQtWeightage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQtWeightage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtWeightageKeyPressed(evt);
            }
        });

        lblQuestionNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblQuestionNumber.setForeground(new java.awt.Color(102, 102, 102));
        lblQuestionNumber.setText("Question Number:");

        txtQuestionNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuestionNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuestionNumberKeyPressed(evt);
            }
        });

        txtNoOfSubQuestions.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNoOfSubQuestions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoOfSubQuestionsKeyPressed(evt);
            }
        });

        lblNoOfSubQts.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNoOfSubQts.setForeground(new java.awt.Color(102, 102, 102));
        lblNoOfSubQts.setText("Number of Sub Questions:");

        txtQtStatement.setColumns(20);
        txtQtStatement.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQtStatement.setRows(5);
        jScrollPane1.setViewportView(txtQtStatement);

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close-icon.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save-icon.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        cmbQtDifficultyLevel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbQtDifficultyLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy ", "Medium", "Hard" }));

        lblDiffLvl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDiffLvl.setForeground(new java.awt.Color(102, 102, 102));
        lblDiffLvl.setText("Difficulty Level:");

        lblWt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblWt.setForeground(new java.awt.Color(102, 102, 102));
        lblWt.setText("Weightage:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Question:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addGap(171, 171, 171))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQuestionNumber)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuestionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNoOfSubQts)
                                .addGap(18, 18, 18)
                                .addComponent(txtNoOfSubQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblWt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQtWeightage, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblDiffLvl)
                                .addGap(18, 18, 18)
                                .addComponent(cmbQtDifficultyLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblQuestionNumber)
                    .addComponent(txtQuestionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWt)
                    .addComponent(txtQtWeightage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiffLvl)
                    .addComponent(cmbQtDifficultyLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoOfSubQts)
                    .addComponent(txtNoOfSubQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(!"".equals(txtNoOfSubQuestions.getText().trim()) || !isMainQuestion){
            if(!"".equals(txtQtStatement.getText().trim())){
                if(!"".equals(txtQtWeightage.getText().trim())){
                    if(!"".equals(txtQuestionNumber.getText().trim()) || !isMainQuestion){
                        if(!isMainQuestion){
                            if(!isUpdate){
                                String st=txtQtStatement.getText().trim();
                                int wt=Integer.parseInt(txtQtWeightage.getText().trim());
                                String selectedDifficulty=cmbQtDifficultyLevel.getSelectedItem().toString().trim();
                                sub_Question=new Sub_Question(st,wt,selectedDifficulty);
                               if(Database_Operations.insertSub(sub_Question)){
                                   JOptionPane.showMessageDialog(null, "Record Inserted Successfully!");
                               }else{
                                   JOptionPane.showMessageDialog(null, "Record couldn't be Inserted!");
                               }
                            }else{
                                int selectedQuestionNumber=sub_Question.getAllotedQuestionNumber();
                                String statement=txtQtStatement.getText().trim();
                                int weightage=Integer.parseInt(txtQtWeightage.getText().trim());
                                String selectedDifficulty=cmbQtDifficultyLevel.getSelectedItem().toString().trim();
                                sub_Question=new Sub_Question(statement, weightage, selectedDifficulty);
                                sub_Question.allotQuestionNumber(selectedQuestionNumber);
                                if(Database_Operations.updateSub(sub_Question)){
                                   JOptionPane.showMessageDialog(null, "Record Updated Successfully!");
                                }else{
                                   JOptionPane.showMessageDialog(null, "Record couldn't be Updated!");
                                }
                            }
                        }else{
                            if(!isUpdate){
                                String st=txtQtStatement.getText().trim();
                                int wtPerQt=Integer.parseInt(txtQtWeightage.getText().trim());
                                int noOfQts=Integer.parseInt(txtNoOfSubQuestions.getText().trim());
                                int questionNumber=Integer.parseInt(txtQuestionNumber.getText().trim());
                                main_Question=new Main_Question(st,wtPerQt,noOfQts,questionNumber);
                                Paper.addMainQuestion(main_Question);
                                JOptionPane.showMessageDialog(null, "Record Inserted Successfully!");
                            }else{
                                int selectedQuestionNumber=main_Question.getAllotedQuestionNumber();
                                String statement=txtQtStatement.getText().trim();
                                int weightagePerQt=Integer.parseInt(txtQtWeightage.getText().trim());
                                int numberOfQuestions=Integer.parseInt(txtNoOfSubQuestions.getText().trim());
                                main_Question=Paper.getMainQuestionByNumber(selectedQuestionNumber);
                                main_Question.setStatement(statement);
                                main_Question.setWeightagePerQuestion(weightagePerQt);
                                main_Question.setNoOfQuestions(numberOfQuestions);
                                main_Question.setWeightage(weightagePerQt * numberOfQuestions);
                                JOptionPane.showMessageDialog(null, "Record Updated Successfully!");
                            }
                        }
                         java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                if(!isMainQuestion){
                                    new Admin_DashBoard().setVisible(true);
                                }else{
                                    new Add_Main_Questions().setVisible(true);
                                }
                            }
                        });
                        dispose();
                    }else{
                        JOptionPane.showMessageDialog(null, "Please enter Question Number");
                        return;
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter Question Weightage");
                    return;
                }
            }else{
                JOptionPane.showMessageDialog(null, "Please enter Question Statement");
                return;
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please enter number of subquestions");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if(!isMainQuestion){
                    new Admin_DashBoard().setVisible(true);
                }else{
                    new Add_Main_Questions().setVisible(true);
                }
            }
        });
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtQuestionNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuestionNumberKeyPressed
        // TODO add your handling code here:
         int key = evt.getKeyCode();
        if (key < 96 && key > 105) {
             evt.setKeyChar(' ');
        }
    }//GEN-LAST:event_txtQuestionNumberKeyPressed

    private void txtQtWeightageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtWeightageKeyPressed
        // TODO add your handling code here:
         int key = evt.getKeyCode();
        if (key < 96 && key > 105) {
             evt.setKeyChar(' ');
        }
    }//GEN-LAST:event_txtQtWeightageKeyPressed

    private void txtNoOfSubQuestionsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOfSubQuestionsKeyPressed
        // TODO add your handling code here:
         int key = evt.getKeyCode();
        if (key < 96 && key > 105) {
             evt.setKeyChar(' ');
        }
    }//GEN-LAST:event_txtNoOfSubQuestionsKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Question.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Question.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Question.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Question.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbQtDifficultyLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDiffLvl;
    private javax.swing.JLabel lblNoOfSubQts;
    private javax.swing.JLabel lblQuestionNumber;
    private javax.swing.JLabel lblWt;
    private javax.swing.JTextField txtNoOfSubQuestions;
    private javax.swing.JTextArea txtQtStatement;
    private javax.swing.JTextField txtQtWeightage;
    private javax.swing.JTextField txtQuestionNumber;
    // End of variables declaration//GEN-END:variables
}
